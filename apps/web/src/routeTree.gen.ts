/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsersIndexRouteImport } from './routes/users/index'
import { Route as SseTimeIndexRouteImport } from './routes/sseTime/index'
import { Route as IntervalIndexRouteImport } from './routes/interval/index'
import { Route as CounterIndexRouteImport } from './routes/counter/index'
import { Route as UsersUserIdRouteImport } from './routes/users/$userId'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersIndexRoute = UsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const SseTimeIndexRoute = SseTimeIndexRouteImport.update({
  id: '/sseTime/',
  path: '/sseTime/',
  getParentRoute: () => rootRouteImport,
} as any)
const IntervalIndexRoute = IntervalIndexRouteImport.update({
  id: '/interval/',
  path: '/interval/',
  getParentRoute: () => rootRouteImport,
} as any)
const CounterIndexRoute = CounterIndexRouteImport.update({
  id: '/counter/',
  path: '/counter/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersUserIdRoute = UsersUserIdRouteImport.update({
  id: '/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/counter': typeof CounterIndexRoute
  '/interval': typeof IntervalIndexRoute
  '/sseTime': typeof SseTimeIndexRoute
  '/users': typeof UsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/counter': typeof CounterIndexRoute
  '/interval': typeof IntervalIndexRoute
  '/sseTime': typeof SseTimeIndexRoute
  '/users': typeof UsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/counter/': typeof CounterIndexRoute
  '/interval/': typeof IntervalIndexRoute
  '/sseTime/': typeof SseTimeIndexRoute
  '/users/': typeof UsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/users/$userId'
    | '/counter'
    | '/interval'
    | '/sseTime'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/users/$userId'
    | '/counter'
    | '/interval'
    | '/sseTime'
    | '/users'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/users/$userId'
    | '/counter/'
    | '/interval/'
    | '/sseTime/'
    | '/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  UsersUserIdRoute: typeof UsersUserIdRoute
  CounterIndexRoute: typeof CounterIndexRoute
  IntervalIndexRoute: typeof IntervalIndexRoute
  SseTimeIndexRoute: typeof SseTimeIndexRoute
  UsersIndexRoute: typeof UsersIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/$userId': {
      id: '/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof UsersUserIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/counter/': {
      id: '/counter/'
      path: '/counter'
      fullPath: '/counter'
      preLoaderRoute: typeof CounterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/interval/': {
      id: '/interval/'
      path: '/interval'
      fullPath: '/interval'
      preLoaderRoute: typeof IntervalIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sseTime/': {
      id: '/sseTime/'
      path: '/sseTime'
      fullPath: '/sseTime'
      preLoaderRoute: typeof SseTimeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  UsersUserIdRoute: UsersUserIdRoute,
  CounterIndexRoute: CounterIndexRoute,
  IntervalIndexRoute: IntervalIndexRoute,
  SseTimeIndexRoute: SseTimeIndexRoute,
  UsersIndexRoute: UsersIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
